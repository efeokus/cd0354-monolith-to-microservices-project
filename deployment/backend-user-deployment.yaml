apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-user
spec:
  selector:
    matchLabels:
      run: backend-user
  replicas: 2
  template:
    metadata:
      labels:
        run: backend-user
    spec:
      containers:
      - name: backend-user
        image: docker.io/efeokus/udagram-api-user:v1
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m
        
        env:
            - name: POSTGRES_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: POSTGRES_USERNAME
                  optional: false

            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: POSTGRES_PASSWORD
                  optional: false

            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: POSTGRES_DB
                  optional: false

            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: POSTGRES_HOST
                  optional: false

            - name: AWS_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: AWS_BUCKET
                  optional: false

            - name: AWS_PROFILE
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: AWS_PROFILE
                  optional: false

            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: AWS_REGION
                  optional: false

            - name: JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: JWT_SECRET
                  optional: false

            - name: URL
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: URL
                  optional: false

        volumeMounts:
          - name: aws-secrets
            mountPath: "$HOME/.aws"   
            readOnly: true
      volumes:
      - name: aws-secrets
        secret:
          secretName: aws-secrets
          optional: false


---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: backend-user
  name: backend-user
spec:
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
  selector:
    service: backend-user
